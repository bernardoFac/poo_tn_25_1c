@startuml
actor Usuario
participant PlataformaStreaming as PS
participant UsuarioObjeto       as U
participant Perfil           as P

Usuario -> PS : calcularCosto(int idUsuario):float
activate PS
PS -> PS : buscarUsuario(int idUsuario):Usuario
alt usuario existe
  PS -> U : calcularCosto():float
  activate U

  U -> U : getPerfiles():list<Perfil>
  U -> U : getDispositivos():list<Dispositivo>
  loop por cada perfil existente en listaPerfiles
    U -> P : cantidadReproducciones()
    activate P
    P --> U : int totalReproducciones  += int repro_i
    deactivate P
  end
  U -> U : calcularCosto(list<Perfil>, list<Dispositivo>, totalReproducciones): float
  U --> PS : float costo
  deactivate U

  PS --> Usuario : float costo
else usuario no existe
  PS --> Usuario : exceptionMessage("Usuario no encontrado")
end

@enduml